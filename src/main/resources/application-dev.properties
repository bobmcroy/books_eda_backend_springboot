# Activate this profile
spring.config.activate.on-profile=dev

# App environment
app.env=dev
app.seed=true

# DynamoDB
app.dynamo.primaryRegion=us-east-1
app.dynamo.secondaryRegion=us-west-2
app.dynamo.tableName=book_list
DYNAMO_ENDPOINT=

# SNS
# SNS Topics per action
app.sns.buyTopicArn=arn:aws:sns:us-east-1:767174588192:book-buy-topic
app.sns.checkoutTopicArn=arn:aws:sns:us-east-1:767174588192:book-checkout-topic
app.sns.listTopicArn=arn:aws:sns:us-east-1:767174588192:book-list-topic
app.sns.returnTopicArn=arn:aws:sns:us-east-1:767174588192:book-return-topic
app.sns.sellTopicArn=arn:aws:sns:us-east-1:767174588192:book-sell-topic

# (Optional) SQS if you want to reference a queue URL
# Optional SQS URLs if consuming messages
app.sqs.buyQueueUrl=https://sqs.us-east-1.amazonaws.com/767174588192/book-buy-queue
app.sqs.checkoutQueueUrl=https://sqs.us-east-1.amazonaws.com/767174588192/book-checkout-queue
app.sqs.listQueueUrl=https://sqs.us-east-1.amazonaws.com/767174588192/book-list-queue
app.sqs.returnQueueUrl=https://sqs.us-east-1.amazonaws.com/767174588192/book-return-queue
app.sqs.sellQueueUrl=https://sqs.us-east-1.amazonaws.com/767174588192/book-sell-queue

# Notes:
# Credentials are picked up from AWS_PROFILE, env vars, or default provider chain.
# Example run:
# AWS_PROFILE=dev ./mvnw spring-boot:run -Dspring-boot.run.profiles=dev
